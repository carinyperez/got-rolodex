{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cariny/Desktop/react/monsters-rolodex/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Component } from 'react'; // import data from './got.json'; \n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [{\n        name: 'Arya',\n        id: 'asc1'\n      }, {\n        name: 'Cersei',\n        id: 'asc2'\n      }, {\n        name: 'Daenerys',\n        id: 'asc3'\n      }]\n    };\n  } //runs after the component output has been rendered to the DOM\n\n\n  componentDidMount() {\n    const fs = require('fs');\n\n    const json_data = require('./got.json');\n\n    fs.readFile(json_data, 'utf8', function (err, data) {\n      try {\n        data = JSON.parse(data);\n\n        for (let i in data) {\n          console.log('Name:', data[i].name);\n        }\n      } catch (e) {// Catch error in case file doesn't exist or isn't valid JSON\n      }\n    });\n  } // method examines this.props, which are parameters passed down by the parent and this.state, which is internal to the component\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.characters.map(character => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", character.name]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }, this)) // keys help react identify which items have changed \n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cariny/Desktop/react/monsters-rolodex/src/App.js"],"names":["Component","App","constructor","state","characters","name","id","componentDidMount","fs","require","json_data","readFile","err","data","JSON","parse","i","console","log","e","render","map","character"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAAQA,SAAR,QAAwB,OAAxB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CACV;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,EAAE,EAAE;AAFN,OADU,EAKV;AACED,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,EAAE,EAAE;AAFN,OALU,EASV;AACED,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,EAAE,EAAE;AAFN,OATU;AADD,KAAb;AAgBD,GApByB,CAsB1B;;;AACAC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,UAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AAEAD,IAAAA,EAAE,CAACG,QAAH,CAAYD,SAAZ,EAAuB,MAAvB,EAA+B,UAAUE,GAAV,EAAeC,IAAf,EAAqB;AACpD,UAAI;AACFA,QAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;;AACA,aAAK,IAAIG,CAAT,IAAcH,IAAd,EAAmB;AACnBI,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,IAAI,CAACG,CAAD,CAAJ,CAAQX,IAA5B;AACC;AACF,OALD,CAKE,OAAOc,CAAP,EAAU,CACZ;AACC;AACA,KATD;AAWD,GAvCyB,CAyC1B;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEI,KAAKjB,KAAL,CAAWC,UAAX,CAAsBiB,GAAtB,CAA0BC,SAAS,iBAAI;AAAA,wBAAyBA,SAAS,CAACjB,IAAnC;AAAA,SAASiB,SAAS,CAAChB,EAAnB;AAAA;AAAA;AAAA;AAAA,cAAvC,CAFJ,CAGI;;AAHJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAnDyB;;AAqD5B,eAAeL,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {Component} from 'react'; \n// import data from './got.json'; \n\nclass App extends Component {\n\n  constructor() {\n    super(); \n    this.state = {\n      characters :[\n        {\n          name: 'Arya',\n          id: 'asc1' \n        },\n        {\n          name: 'Cersei',\n          id: 'asc2'\n        },\n        {\n          name: 'Daenerys',\n          id: 'asc3'\n        }\n      ]\n    }\n  }\n\n  //runs after the component output has been rendered to the DOM\n  componentDidMount() {\n\n    const fs = require('fs');\n    const json_data = require('./got.json');\n\n    fs.readFile(json_data, 'utf8', function (err, data) {\n    try {\n      data = JSON.parse(data)\n      for (let i in data){\n      console.log('Name:',data[i].name)\n      }\n    } catch (e) {\n    // Catch error in case file doesn't exist or isn't valid JSON\n    }\n    });\n\n  }\n\n  // method examines this.props, which are parameters passed down by the parent and this.state, which is internal to the component\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.characters.map(character => <h1 key={character.id}> {character.name}</h1>)\n          // keys help react identify which items have changed \n        }\n    </div>\n  );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}